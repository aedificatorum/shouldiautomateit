{"version":3,"sources":["Pluralize.js","Calculator.js","CalculationsTable.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["Pluralize","_ref","count","_ref$addition","addition","children","react_default","a","createElement","Fragment","Calculator","duration","automationTime","numberOfTimesPerMonth","numberOfMonths","arguments","length","undefined","maxSpeedUp","maxSlowDown","rows","i","month","timeSaved","roiSlow","roiMed","roiFast","shouldIAutomate","push","CalculationsTable","table","className","map","row","key","toLowerCase","Footer","id","href","target","src","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChangeNumber","event","setState","defineProperty","Number","value","handleSubmit","preventDefault","_this$state","state","unit","frequency","calculationTable","calculationsTable","canBeSubmitted","_this$state2","_this$state3","displayResult","src_CalculationsTable","isCalculateDisabled","type","placeholder","data-tooltip","onChange","src_Pluralize","disabled","onClick","step","src_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a1f12ad.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Pluralize = ({ count, addition = \"s\", children }) => {\r\n  return (\r\n    <React.Fragment>\r\n      {count !== 1 ? children + addition : children}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Pluralize;\r\n","function Calculator(duration, automationTime, numberOfTimesPerMonth, numberOfMonths = 36, maxSpeedUp = 0.5, maxSlowDown = 3) {\r\n    let rows = [];\r\n\r\n    for (let i = 0; i < numberOfMonths; i++) {\r\n        let month = i + 1;\r\n        let timeSaved = duration * numberOfTimesPerMonth * month;\r\n        let maxAutomateTime = automationTime * maxSlowDown;\r\n        let minAutomateTime = automationTime * maxSpeedUp;\r\n        let roiSlow = timeSaved - maxAutomateTime;\r\n        let roiMed = timeSaved - automationTime;\r\n        let roiFast = timeSaved - minAutomateTime;\r\n        let shouldIAutomate = 'No';\r\n\r\n        if (roiSlow > 0) {\r\n            shouldIAutomate = 'Definitely'\r\n        } else if (roiMed > 0) {\r\n            shouldIAutomate = 'Probably'\r\n        } else if (roiFast > 0) {\r\n            shouldIAutomate = 'Maybe'\r\n        }\r\n\r\n        rows.push({\r\n            month,\r\n            timeSaved,\r\n            roiSlow,\r\n            roiMed,\r\n            roiFast,\r\n            shouldIAutomate\r\n        }\r\n        );\r\n    }\r\n\r\n\r\n    return rows;\r\n}\r\n\r\nexport default Calculator;","import React from \"react\";\r\n\r\nconst CalculationsTable = ({ table }) => {\r\n  return (\r\n    <div className=\"row\">\r\n      <table className=\"striped\">\r\n        <thead>\r\n          <tr>\r\n            <th>Month</th>\r\n            <th>Time Saved</th>\r\n            <th>ROI Slow</th>\r\n            <th>ROI</th>\r\n            <th>ROI Fast</th>\r\n            <th>Should I Automate It?</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {table.map((row, i) => {\r\n            return (\r\n              <tr key={i}>\r\n                <td>{row.month}</td>\r\n                <td>{row.timeSaved}</td>\r\n                <td>{row.roiSlow}</td>\r\n                <td>{row.roiMed}</td>\r\n                <td>{row.roiFast}</td>\r\n                <td className={row.shouldIAutomate.toLowerCase()}>{row.shouldIAutomate}</td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalculationsTable;\r\n","import React from \"react\"\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer className=\"page-footer blue-grey lighten-2\">\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col l6 s12\">\r\n          <h4 className=\"white-text\" id=\"about\">About</h4>\r\n          <p className=\"grey-text text-lighten-4\">Should I automate it? is designed for anyone interested to see when a\r\n            manual\r\n            process would benefit from being automated.</p>\r\n        </div>\r\n        <div className=\"col l4 offset-l2 s12\">\r\n          <h4 className=\"white-text\">Links</h4>\r\n          <ul>\r\n            <li><a className=\"grey-text text-lighten-3\" href=\"https://github.com/aedificatorum/shouldiautomateit\"\r\n                target=\"blank\">GitHub</a></li>\r\n            <li><a className=\"grey-text text-lighten-3\" href=\"https://twitter.com/aedificatorum\" target=\"blank\">Twitter</a></li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"footer-copyright black\">\r\n      <div className=\"container\">\r\n        <img src=\"aedificatorum-logo.png\" className=\"logo\" alt=\"logo\" />\r\n        Built by <a href=\"https://github.com/aedificatorum\">Aedificatorum</a>\r\n      </div>\r\n    </div>\r\n  </footer>\r\n  )\r\n}\r\n\r\nexport default Footer;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Pluralize from \"./Pluralize\";\r\nimport Calculator from \"./Calculator\";\r\nimport CalculationsTable from \"./CalculationsTable\";\r\nimport Footer from \"./Footer\";\r\nimport \"../node_modules/materialize-css/dist/css/materialize.css\";\r\nimport \"../node_modules/materialize-css/dist/js/materialize.js\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      frequency: 1,\r\n      unit: 20,\r\n      duration: 20,\r\n      automationTime: 2400,\r\n      calculationsTable: [],\r\n      maxSpeedUp: 0.75,\r\n      maxSlowDown: 2.0,\r\n      numberOfMonths: 36\r\n    };\r\n  }\r\n\r\n  handleChangeNumber = event => {\r\n    this.setState({\r\n      [event.target.id]: Number(event.target.value)\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const {\r\n      unit,\r\n      frequency,\r\n      duration,\r\n      automationTime,\r\n      maxSlowDown,\r\n      maxSpeedUp,\r\n      numberOfMonths\r\n    } = this.state;\r\n    let numberOfTimesPerMonth = frequency * unit;\r\n\r\n    let calculationTable = Calculator(\r\n      duration,\r\n      automationTime,\r\n      numberOfTimesPerMonth,\r\n      numberOfMonths,\r\n      maxSpeedUp,\r\n      maxSlowDown\r\n    );\r\n\r\n    this.setState({\r\n      calculationsTable: calculationTable\r\n    });\r\n  };\r\n\r\n  canBeSubmitted = () => {\r\n    const { duration, automationTime, frequency, unit } = this.state;\r\n\r\n    return frequency > 0 && unit !== \"\" && duration > 0 && automationTime > 0;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      calculationsTable,\r\n      duration,\r\n      automationTime,\r\n      frequency,\r\n      unit,\r\n      maxSpeedUp,\r\n      maxSlowDown,\r\n      numberOfMonths\r\n    } = this.state;\r\n    let displayResult =\r\n      calculationsTable.length > 1 ? (\r\n        <CalculationsTable table={calculationsTable} />\r\n      ) : (\r\n        \"\"\r\n      );\r\n    const isCalculateDisabled = !this.canBeSubmitted();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <main>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <form className=\"col m6 s12\">\r\n                <div className=\"row blue-grey lighten-5 basic-form\">\r\n                  <h5>Basic options</h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"frequency\"\r\n                    placeholder=\"1, 2, 3...\"\r\n                    value={frequency}\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"How often you do it\"\r\n                    onChange={this.handleChangeNumber}\r\n                  />\r\n                  <span>\r\n                    {\" \"}\r\n                    <Pluralize count={frequency}>time</Pluralize> every{\" \"}\r\n                  </span>\r\n                  <select\r\n                    type=\"text\"\r\n                    id=\"unit\"\r\n                    className=\"browser-default\"\r\n                    onChange={this.handleChangeNumber}\r\n                    value={unit}\r\n                  >\r\n                    <option value=\"30\">day</option>\r\n                    <option value=\"20\">week day</option>\r\n                    <option value=\"4\">Week</option>\r\n                    <option value=\"2\">Other Week</option>\r\n                    <option value=\"1\">Month</option>\r\n                  </select>\r\n                  <span> I could save </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"duration\"\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"Time saved\"\r\n                    placeholder=\"10, 15, 20...\"\r\n                    value={duration}\r\n                    onChange={this.handleChangeNumber}\r\n                  />\r\n                  <span>\r\n                    {\" \"}\r\n                    <Pluralize count={duration}>minute</Pluralize> through\r\n                    automation. That automation would take...\r\n                  </span>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"automationTime\"\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"How long to automate\"\r\n                    placeholder=\"30, 60, 90...\"\r\n                    value={automationTime}\r\n                    onChange={this.handleChangeNumber}\r\n                  />\r\n                  <span>\r\n                    {\" \"}\r\n                    <Pluralize count={automationTime}>minute</Pluralize>\r\n                  </span>\r\n\r\n                  <div className=\"button\">\r\n                    <button\r\n                      className=\"waves-effect waves-light btn\"\r\n                      disabled={isCalculateDisabled}\r\n                      onClick={this.handleSubmit}\r\n                    >\r\n                      Should I automate it?\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n\r\n              <form className=\"col m5 offset-m1\">\r\n                <div className=\"row blue-grey lighten-5 advanced-form\">\r\n                  <h5>Advanced options</h5>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"numberOfMonths\"\r\n                    value={numberOfMonths}\r\n                    placeholder=\"1, 2, 3...\"\r\n                    onChange={this.handleChangeNumber}\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"How many months to forecast\"\r\n                  />\r\n                  <label>Number Of Months</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    value={maxSpeedUp}\r\n                    step=\"0.1\"\r\n                    id=\"maxSpeedUp\"\r\n                    placeholder=\"0.3, 0.5, 0.7...\"\r\n                    onChange={this.handleChangeNumber}\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"How much faster the automation could be\"\r\n                  />\r\n                  <label>Max Speed Up</label>\r\n                  <input\r\n                    type=\"number\"\r\n                    id=\"maxSlowDown\"\r\n                    value={maxSlowDown}\r\n                    placeholder=\"1, 2, 3...\"\r\n                    onChange={this.handleChangeNumber}\r\n                    className=\"tooltipped\"\r\n                    data-tooltip=\"How much slower the automation could be\"\r\n                  />\r\n                  <label>Max Slow Down</label>\r\n                </div>\r\n              </form>\r\n\r\n              {displayResult}\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}